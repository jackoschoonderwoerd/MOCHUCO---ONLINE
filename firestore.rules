rules_version = '2';
service cloud.firestore {

    match /databases/{database}/documents {

        // function isAdmin() {
        //     return true
                // isAuthenticated()
                // && 'admin' in request.auth.token
                // && request.auth.token.admin == true;
        // }

        // function isAuthenticated() {
            // return request.auth.uid != null;
        // }
        // function isNonEmptyString(fieldName) {
        //     return request.resource.data[fieldName] is string && request.resource.data[fieldName].size() > 0
        // }

        // function isKnownUser () {
        //     return
        //         isAuthenticated() &&
        //         exists(/databases/$(database)/documents/users/$(request.auth.uid));
                // true;
        // }
        function userOwnsVenue(userId, venueId) {
            return exists(/databases/$(database)/documents/users/$(userId)/venuesOwned/$(venueId))
        }

        // function userOwnesItem(userId, venueId) {
        //     return exists(/databases/$(database)/documents/users/$(userId)/venuesOwned/$(venueId))
        // }
        function userCanCreateVenue(userId) {
            // return exists(/databases/$(database)/documents/users/$(userId))
            return true;
        }

        // function isValidVenue() {
        //     return
        //         request.resource.data.name is string;
        //         // true;
        // }

        // match /users/{userId} {
        //     allow read: if true;
        //     allow write: if true;
        //     match /venuesOwned/{venueId} {
        //         allow read: if true;
        //         allow write: if true;
        //     }
        // }

        match /venues/{venueId} {
            // allow read: if userOwnsItem(request.auth.uid, venueId)
            allow read: if true;

            allow create:  if userCanCreateVenue(request.auth.uid) || request.auth.uid == '8Yb9nGiE8Wf7B7jRjlfrFt0NNq93';
            allow update: if userOwnesVenue(request.auth.uid, venueId) || request.auth.uid == '8Yb9nGiE8Wf7B7jRjlfrFt0NNq93';
            allow delete: if userOwnesVenue(request.auth.uid, venueId) || request.auth.uid == '8Yb9nGiE8Wf7B7jRjlfrFt0NNq93';
            // allow read: if isAuthenticated() && ownsVenue();
            // allow create, update: if isValidVenue() && isAdmin();
            // allow delete: if isAdmin();
            // allow delete: if true;

            match /items/{itemId} {
                allow read: if true;
                // allow read: if true;
                allow write: if userOwnesItem(request.auth.uid, venueId) || request.auth.uid == '8Yb9nGiE8Wf7B7jRjlfrFt0NNq93';
                // allow read: if userOwnsVenue(request.auth.uid, venueId)
                // allow read: if isKnownUser();
                // allow create, update, delete: if true;
            }
        }
        match /users/{userId} {
            allow read: if true;
            allow write: if true;
            match /venuesOwned/{venuesOwnedId} {
                allow read: if true
                allow write: if true;
            }

        }
        // COLLECTION GROUP QUERIES LESSON 41 4:10
        // match /{path=**}/items/{itemId} {
        //     allow read: if isKnownUser();
        //     allow write: if true;
        // }
    }
}

// match /databases/{database}/documents {
    // match /{document=**} {
    //   allow read, write: if
    //       request.time < timestamp.date(2022, 12, 10);
    // }
    // match /{document=**} {
    //     allow read: if true;
    //     allow write: if false;
    // }
// }
// match /databases/{database}/documents/venues/{venueId}/items/{itemId} {
//     allow read;
// }
